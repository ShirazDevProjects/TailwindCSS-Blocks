/* src/Carousel.css */

.carousel-container {
  width: 90vw;
  max-width: 1200px;
  margin: 50px auto;
  overflow: hidden; /* Still good to hide potential overflow */
  border-radius: 10px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.carousel-controls {
  margin-bottom: 20px;
  display: flex;
  justify-content: center;
  gap: 15px;
}

.carousel-controls button {
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

.carousel-controls button:hover:not(:disabled) {
  background-color: #0056b3;
}

.carousel-controls button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

/* New/Modified CSS for the appearance animation */
.carousel {
  position: relative; /* Essential: This is the container for absolutely positioned items */
  width: 100%;
  height: 400px; /* Define a fixed height for the carousel viewport */
  overflow: hidden; /* Hide any overflow, though with absolute positioning, less critical */
}

.inner-carousel {
  /* This container no longer needs flex, as items are positioned absolutely */
  /* It effectively acts as a direct parent for the animating item */
  width: 100%;
  height: 100%;
  position: relative; /* Make it a positioning context for the absolute items */
}

.item {
  position: absolute; /* Position items on top of each other */
  top: 0;
  left: 0;
  width: 100%; /* Take full width of parent (.inner-carousel) */
  height: 100%; /* Take full height of parent */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Removed margin-right, border-radius, box-shadow for a clean appearance transition */
}

.item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}
